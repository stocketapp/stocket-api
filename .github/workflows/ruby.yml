# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  verify:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['2.7.2']

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: stocketDB
          POSTGRES_DB: stocket_api_test
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@473e4d8fe5dd94ee328fdfca9f8c9c7afc9dae5e
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: 10.13.0
      - name: Install dependencies
        run: |
          sudo apt-get -yqq install libpq-dev build-essential libcurl4-openssl-dev
          gem install bundler
          bundle install --jobs 4 --retry 3
          yarn install
      - name: Setup test database
        env:
          RAILS_ENV: test
          PGHOST: localhost
          POSTGRES_DB: stocket_api_test
          POSTGRES_USER: stocketDB
        run: bundle exec rake db:create db:migrate
      - name: Run tests
        env:
          PGHOST: localhost
          POSTGRES_DB: rails_github_actions_test
          POSTGRES_USER: rails_github_actions
          PGPORT: ${{ job.services.postgres.ports[5432] }}
          RAILS_ENV: test
        run: bundle exec rake
